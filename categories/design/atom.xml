<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categoria: Design | Nome do Jogo]]></title>
  <link href="http://nomedojogo.com/categories/design/atom.xml" rel="self"/>
  <link href="http://nomedojogo.com/"/>
  <updated>2012-10-30T23:32:52-02:00</updated>
  <id>http://nomedojogo.com/</id>
  <author>
    <name><![CDATA[Carlos Brando]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Decisões de Design]]></title>
<link href="http://nomedojogo.com/2008/03/12/decisoes-de-design/"/>
<updated>2008-03-12T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2008/03/12/decisoes-de-design</id>

      <content type="html"><![CDATA[<p>Eu sou um fã da 37signals e principalmente do blog <a href="http://www.37signals.com">Signal vs. Noise</a>, e isto não é segredo para ninguém. Mas existe algumas séries de artigos que eles publicam que gosto mais. Inclusive já traduzi alguns artigos destas séries.</p>

<p>Umas das minhas séries favoritas é a "Design Decisions", onde eles relatam como foi o processo para se chegar a um consenso sobre um novo layout. Veja por exemplo os passos dados para se chegar a um <a href="http://www.37signals.com/svn/posts/898-design-decisions-adding-the-calendar-strip-to-the-backpack-newsroom">calendário lateral no Backpack</a>:</p>

<p><img src="http://old.nomedojogo.com/wp-content/uploads/2008/03/01.png" alt="01.png" /></p>

<p><img src="http://old.nomedojogo.com/wp-content/uploads/2008/03/02.png" alt="02.png" /></p>

<p><img src="http://old.nomedojogo.com/wp-content/uploads/2008/03/03.png" alt="03.png" /></p>

<p><img src="http://old.nomedojogo.com/wp-content/uploads/2008/03/04.png" alt="04.png" /></p>

<p><img src="http://old.nomedojogo.com/wp-content/uploads/2008/03/05.png" alt="05.png" />
O resultado final você pode ver <a href="http://www.backpackit.com/images/bp-calstrip-big.png">aqui</a>.</p>

<p><a rel="bookmark" href="http://nomedojogo.com/2008/03/12/decisoes-de-design/"></a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Repita comigo: Nós não precisamos disto!]]></title>
<link href="http://nomedojogo.com/2007/12/06/repita-comigo-nos-nao-precisamos-disto/"/>
<updated>2007-12-06T00:00:00-02:00</updated>
<id>http://nomedojogo.com/2007/12/06/repita-comigo-nos-nao-precisamos-disto</id>

      <content type="html"><![CDATA[<p><img src="http://old.nomedojogo.com/wp-content/uploads/2007/12/58979079_945296929e.jpg" alt="58979079_945296929e.jpg" /></p>

<p><strong>MENOS É MAIS</strong>, se você não é o dono e nem trabalha para uma "grande" companhia, diga isso bem alto todo dia de manhã e se apegue a isso. É a única maneira de brigar com os grandes.</p>

<p>Um bom programador não é aquele que conhece todas as manhãs da linguagem ou do framework que usa, nem aquele que sabe todos os atalhos do TextMate, ou aquele que consegue digitar na velocidade da luz. Um bom web designer não é o jedi do Photoshop ou aquele faz até chover com HTML, CSS, Javascript, etc.. Os melhores programadores e designers que conheço são aqueles que sabem quando devem dizer: "Nós não precisamos disto".</p>

<p>Por exemplo, no <a href="http://www.carreirati.com">CarreiraTI.com</a> algumas pessoas me pediram para criar campos específicos para informações das ofertas de emprego, como: um campo para experiência exigida, outro para salário, etc.. Mas pensando bem, nós não precisamos disto, quem está redigindo a oferta pode separar da maneira que desejar usando um tracejado (---) ou asteriscos (*), por exemplo.</p>

<p>Seria legal ter campos separados para cada tipo de informação? Seria. O site ficaria bem mais organizado? Sim. Poderíamos criar filtros mais específicos usando estas informações? Seria uma boa. Nós realmente precisamos de tudo isto? <strong>Não</strong>. Então, não vou perder meu tempo com isto agora.</p>

<p>Veja um outro exemplo. Eu tinha o plano de montar um mapa geográfico baseado nas ofertas de emprego cadastradas, por isto inclui a opção de localizar em um mapa o endereço da empresa. Deixei por um tempo no site para ver como seria a reação disto, e percebi que ninguém precisava disto. Perdi meu tempo e aprendi mais uma.</p>

<p>A melhor maneira de sentir se algo é realmente necessário/importante é recebendo feedback de seus clientes e usando o seu bom senso. Mas não faça tudo que lhe pedirem, primeiro analise quantas pessoas <strong>realmente</strong> precisam daquela funcionalidade e só depois faça, se o seu bom senso dizer que vale a pena.</p>

<p><a rel="bookmark" href="http://nomedojogo.com/2007/12/06/repita-comigo-nos-nao-precisamos-disto/"></a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Remova códigos não utilizados dos seus arquivos CSS]]></title>
<link href="http://nomedojogo.com/2007/07/10/remova-codigos-nao-utilizados-dos-seus-arquivos-css/"/>
<updated>2007-07-10T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2007/07/10/remova-codigos-nao-utilizados-dos-seus-arquivos-css</id>

      <content type="html"><![CDATA[<p><img src="http://farm1.static.flickr.com/65/182590110_4b9b6fb5be.jpg?v=0" alt="" /></p>

<p>Durante um projeto, mudanças no layout são muito comuns. Quando isto ocorre, é normal que alguns códigos em seus arquivos <strong>CSS</strong> se tornem desnecessários, neste caso é muito simples apagamos ele.Mas imagine um projeto grande com designers e programadores alterando arquivos o tempo todo. Como verificar se aquele determinado trecho de código é realmente redundante?</p>

<p><strong>Tom Armitage</strong> escreveu um script simples em <strong>Ruby</strong> para verificar isto para você. É o <a href="http://code.google.com/p/css-redundancy-checker/"><strong>CSS Redundancy Checker</strong></a>.</p>

<p>Esta ferramenta é muito simples de usar. Basta informar qual arquivo CSS você deseja verificar e o diretório onde seus arquivos <strong>HTML</strong> se encontram. Assim:
[source:ruby]css-redundancy-checker.rb [cssfile] [directory of html files OR .txt file listing urls to use][/source]
No fim, ele vai te dizer quais linhas do CSS não está sendo usada em nenhum arquivo. Simples assim...</p>

<p><a rel="bookmark" href="http://nomedojogo.com/2007/07/10/remova-codigos-nao-utilizados-dos-seus-arquivos-css/"></a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Um CSS para o IE, outro para o Firefox, outro para o...]]></title>
<link href="http://nomedojogo.com/2007/06/27/um-css-para-o-ie-outro-para-o-firefox-outro-para-o/"/>
<updated>2007-06-27T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2007/06/27/um-css-para-o-ie-outro-para-o-firefox-outro-para-o</id>

      <content type="html"><![CDATA[<p>Meu <strong>browser</strong> predileto é o <strong>Firefox</strong>, por isto sempre que estou criando algo, tenho o costume de ir testando nele.</p>

<p>O problema é que quando abro meu site (que está lindo no Firefox) no <strong>Internet Explorer</strong>, fica tudo desalinhado. Mexe aqui, mexe ali, e consigo deixar tudo bonito no IE. Mas quando abro o site no Firefox novamente, ferrei tudo...</p>

<p>Quantas vezes você já passou por isto?</p>

<p>Passei por isto ontem (mais uma vez) e resolvi ir atrás de alguma ferramenta que me ajudasse neste trabalho.</p>

<p>Primeiro encontrei um <strong><a href="http://rafael.adm.br/css_browser_selector/">Javascript</a></strong> que me permite diferenciar as propriedades do CSS de acordo com o browser e até com o sistema operacional:</p>

<p>[source:js]
var css_browser_selector = function() {
var
ua=navigator.userAgent.toLowerCase(),
is=function(t){ return ua.indexOf(t) != -1; },
h=document.getElementsByTagName('html')[0],
b=(!(/opera|webtv/i.test(ua))&amp;&amp;/msie (\d)/.test(ua))?('ie ie'+RegExp.$1):is('gecko/')? 'gecko':is('opera/9')?'opera opera9':/opera (\d)/.test(ua)?'opera opera'+RegExp.$1:is('konqueror')?'konqueror':is('applewebkit/')?'webkit safari':is('mozilla/')?'gecko':'',
os=(is('x11')||is('linux'))?' linux':is('mac')?' mac':is('win')?' win':'';
var c=b+os+' js';
h.className += h.className?' '+c:c;
}();
[/source]</p>

<p>Isto por si só já facilita muito as coisas. Posso criar um CSS assim, por exemplo:</p>

<p>[source:css]
.ie .example {
background-color: yellow
}
.ie7 .example {
background-color: orange
}
.gecko .example {
background-color: gray
}
.win.gecko .example {
background-color: red
}
.linux.gecko .example {
background-color: pink
}
.opera .example {
background-color: green
}
.konqueror .example {
background-color: blue
}
.webkit .example {
background-color: black
}
.example {
width: 100px;
height: 100px;
}
.no_js { display: block }
.has_js { display: none }
.js .no_js { display: none }
.js .has_js { display: block }
[/source]</p>

<p>Entre as opções de browser estão: ie, ie5, ie6, ie7, firefox, opera, konqueror, safari e outros.</p>

<p><img src="http://farm1.static.flickr.com/28/61713976_e9d7be6c02_m.jpg" alt="" align="right" />Outra coisa interessante que encontrei para estes casos é o <strong><a href="http://sitevista.com/cssvista/">CSSVista</a></strong> (apesar do nome só tem uma versão para o <strong>Windows XP</strong>). Este software permite que você altere o CSS enquanto vê uma versão do site no IE e no Firefox ao mesmo tempo.</p>

<p><a rel="bookmark" href="http://nomedojogo.com/2007/06/27/um-css-para-o-ie-outro-para-o-firefox-outro-para-o/"></a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Cadastro de currículos no CarreiraTI]]></title>
<link href="http://nomedojogo.com/2007/06/19/cadastro-de-currculos-no-carreirati/"/>
<updated>2007-06-19T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2007/06/19/cadastro-de-currculos-no-carreirati</id>

      <content type="html"><![CDATA[<p><img src="http://old.nomedojogo.com/wp-content/uploads/2007/06/untitled-1.gif" alt="Untitled-1" width="450" height="341" /></p>

<p>Com um layout novo o <strong><a href="http://www.carreirati.com">CarreiraTI</a></strong> estréia o cadastro de <strong>currículos</strong>. Agora o usuário além de pesquisar vagas, pode cadastrar seu currículo para que as empresas entrem em contato com ele ou enviar os currículos cadastrados diretamente para a vagas.</p>

<p>Não sou <strong>web-designer</strong>, então não sei se ficou legal. Estou aberto a sugestões e ajuda também, caso alguém tenha interesse.</p>

<p>O CarreiraTI é totalmente desenvolvido em <strong>Ruby on Rails</strong>.</p>

<p><a rel="bookmark" href="http://nomedojogo.com/2007/06/19/cadastro-de-currculos-no-carreirati/"></a></p>

]]></content>
    </entry>
  
</feed>

