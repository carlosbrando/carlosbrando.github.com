<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categoria: opiniao | Nome do Jogo]]></title>
  <link href="http://nomedojogo.com/categories/opiniao/atom.xml" rel="self"/>
  <link href="http://nomedojogo.com/"/>
  <updated>2012-04-19T00:30:28-03:00</updated>
  <id>http://nomedojogo.com/</id>
  <author>
    <name><![CDATA[Carlos Brando]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Contratos onde todos ganham]]></title>
<link href="http://nomedojogo.com/2011/09/12/contratos-onde-todos-ganham/"/>
<updated>2011-09-12T11:09:00-03:00</updated>
<id>http://nomedojogo.com/2011/09/12/contratos-onde-todos-ganham</id>

      <content type="html"><![CDATA[<p>Lidar com computadores não é fácil, por outro lado lidar com pessoas costuma ser ainda mais complicado. A muito tempo eu já me convenci que o relacionamento entre clientes e programadores sempre serão problemáticos.</p>

<p>A forma mais simples de tentar diminuir a tensão entre os lados envolvidos são os contratos.</p>

<p>Um bom contrato deve deixar claro quais são os direitos e responsabilidades de cada um dos envolvidos. Também não deve deixar dúvidas sobre qual será a repercussão no caso de uma das partes não cumprir com o acordo.</p>

<p>Um tipo básico de contrato é o que define um preço fixo para o projeto. Esse tipo de contrato é a melhor opção para o cliente e a pior para o programador. Uma mudança no escopo ou um pequeno atraso e tudo vai para a conta do desenvolvedor, deixando todo o risco nas mãos do profissional. Normalmente esse é o tipo de contrato que mais dá problema, já que o programador costuma se sentir lesado por alterações no escopo do projeto e o cliente não se sente na obrigação de pagar mais por isso.</p>

<p>Por outro lado um contrato de tempo e recurso, onde o cliente paga pelo tempo de cada profissional alocado no projeto é o melhor contrato para o programador, mas é o pior para o cliente. Nesse caso, atrasos e alterações no escopo caem sempre na conta do cliente, mesmo quando a culpa não é dele.</p>

<p>Para beneficiar ambos os lados, talvez o mais interessante seja unir esses dois tipos de contratos em um contrato híbrido, onde o cliente e o programador definem um valor fixo menor e uma taxa por horas de trabalho.</p>

<p>Funciona mais ou menos assim: se você estimar que serão necessárias aproximadamente duas semanas (80 horas) para finalizar o projeto e normalmente você cobra R$ 100,00 por hora, então o custo estimado para o projeto seria de R$ 8.000. Nesse tipo de contrato você definiria então com o cliente um pagamento fixo no valor de R$ 4.000 e mais uma taxa de R$ 50,00 reais por hora trabalhada no projeto.</p>

<p>Se o projeto terminar dentro do prazo, o cliente terá pago exatamente o valor estimado para o projeto e todos ganham.</p>

<p>Se o projeto terminar antes da data, o cliente terá pago menos e você terá ganho mais. Digamos que o projeto seja finalizado com 60 horas trabalhadas. Então o cliente pagará R$ 7.000 pelo serviço, que é menos do que o esperado. E você receberá R$ 1.000 a mais do que você receberia pelas 60 horas trabalhadas. Mais uma vez, todos ganham.</p>

<p>Por outro lado, se algo acontecer e o projeto atrasar, então o cliente estará pagando adicionalmente metade da sua hora, dividindo assim igualmente o risco entre o cliente e o programador.</p>

<p>Não importa se você usa uma metodologia ágil ou um modelo mais tradicional, contratos são essenciais em qualquer negocio e não será diferente em desenvolvimento de software. O importante é que você nunca feche um negócio sem assinar um antes.<p><a rel="bookmark" href="http://nomedojogo.com/2011/09/12/contratos-onde-todos-ganham/"></a></p></p>
]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Como convencer sua equipe a usar um sistema de controle de versão]]></title>
<link href="http://nomedojogo.com/2011/08/25/como-convencer-sua-equipe-a-usar-um-sistema-de-controle-de-vers-o/"/>
<updated>2011-08-25T02:02:00-03:00</updated>
<id>http://nomedojogo.com/2011/08/25/como-convencer-sua-equipe-a-usar-um-sistema-de-controle-de-vers-o</id>

      <content type="html"><![CDATA[<p>Desenvolver software sem um sistema de controle de versão (ou SCM do inglês source code management) pode parecer irreal para muitos dos leitores desse blog, mas é importante esclarecer que muitas empresas e profissionais ainda não entendem o valor desse tipo de ferramenta.</p>

<blockquote><p>Nota para o leitor: Se você não sabe o que é um SCM, recomendo ouvir a série sobre o assunto que gravamos recentemente para o <a href="http://grokpodcast.com/tag/scm/">Grok Podcast</a>.</p></blockquote>

<p>A situação fica ainda mais dramática quando um programador "iniciante", porém esclarecido, trabalha em uma empresa que ainda armazena o código-fonte de seus projetos em um diretório no servidor ou somente no computador do desenvolvedor. Nesse caso, como convencer seus colegas de trabalho e principalmente o seu chefe que eles precisam adotar uma ferramenta para controlar o código?</p>

<p>A palavra-chave aqui é <strong>evangelização</strong>. Comece implementando o seu próprio SCM particular. Existem dezenas de opções open-source que podem ser instaladas localmente em sua máquina ou em um servidor da empresa que você tenha acesso. Essa iniciativa fará com que ao menos o seu código tenha uma certa medida de segurança, o que lhe trará um pouco de tranquilidade.</p>

<p>Com o tempo você, diferente de seus colegas, passará a ter a resposta para perguntas como: "Exatamente que alteração foi realizada no módulo XYZ?" e "Quem foi o responsável pela alteração que quebrou o software?". É questão de tempo até que seu chefe e colegas se convençam das vantagens em adotar um sistema para gerenciar o código da sua empresa.</p>

<p>Ainda outra opção é fazer com que sua equipe ouça o <a href="http://grokpodcast.com/">Grok Podcast</a>.<p><a rel="bookmark" href="http://nomedojogo.com/2011/08/25/como-convencer-sua-equipe-a-usar-um-sistema-de-controle-de-vers-o/"></a></p></p>
]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Idéias são apenas multiplicadores de execuções]]></title>
<link href="http://nomedojogo.com/2008/07/11/ideias-sao-apenas-multiplicadores-de-execucoes/"/>
<updated>2008-07-11T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2008/07/11/ideias-sao-apenas-multiplicadores-de-execucoes</id>

      <content type="html"><![CDATA[<p>Eu já tinha visto isto em algum lugar mas não me lembro mais onde, de qualquer forma <strong>Derek Sivers</strong> me relembrou no seu mini-artigo no site <a href="http://www.oreillynet.com/onlamp/blog/2005/08/ideas_are_just_a_multiplier_of.html">ONLamp.com</a>:</p>

<p>É tão engraçado quando escuto as pessoas defendendo suas idéias. Para mim idéias não valem nada sem execução. Elas são apenas um multiplicador.</p>

<h2>Execuções valem milhões</h2>

<p>Explicando melhor:</p>

<pre><code>Uma péssima idéia = -1
Uma idéia fraca = 1
Uma idéia mais ou menos = 5
Uma boa idéia = 10
Uma ótima idéia = 15
Uma idéia brilhante = 20

nenhuma execução = $1
Uma execução fraca = $1000
Uma execução mais ou menos = $10,000
Uma boa execução = $100,000
Uma ótima execução = $1,000,000
Uma execução brilhante = $10,000,000
</code></pre>

<p>Para fazer um negócio é necessário multiplicar os dois. A idéia mais brilhante, sem nenhuma execução vale 20 dólares. Uma idéia brilhante com uma ótima execução vale 20 milhões de dólares.</p>

<p>É por isto que não quero ouvir as idéias das pessoas. Não estou interessado até ver a sua execução.</p>

<h2>Meu parecer</h2>

<p>Concordo com Derek, mas ainda existe um fator que não pode ser desconsiderado: a saturação do mercado.</p>

<p>Isto me fez lembrar do filme "Ligeiramente Grávidos" onde Ben Stone e seus amigos tem a idéia "brilhante" de criar um site com registros do momento exato onde atrizes famosas aparecem nuas em seus filmes. O problema é quando eles descobrem que já existe um site exatamente assim...</p>

<p>Acho que a fórmula correta seria algo assim:</p>

<pre><code>Idéia * Execução / Fator de Saturação do Mercado
</code></pre>

<p>Chega de ter idéias... vamos à execução!<p><a rel="bookmark" href="http://nomedojogo.com/2008/07/11/ideias-sao-apenas-multiplicadores-de-execucoes/"></a></p></p>
]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Carlos Brando e a Surgeworks]]></title>
<link href="http://nomedojogo.com/2007/10/19/carlos-brando-e-a-surgeworks/"/>
<updated>2007-10-19T00:00:00-02:00</updated>
<id>http://nomedojogo.com/2007/10/19/carlos-brando-e-a-surgeworks</id>

      <content type="html"><![CDATA[<p>Já cansei de falar por aqui sobre o mercado brasileiro para profissionais Ruby on Rails. Infelizmente poucas empresas conseguem enxergar o potencial desta ferramenta no desenvolvimento de projetos voltados para a Web.Mas bem diferente das empresas brasileiras, em outras partes do mundo tem muita gente apostando no Ruby e no Rails como a melhor forma de se construir software de forma rápida e produtiva, sem perder qualidade e robustez.</p>

<p>O mais engraçado é que enquanto aqui no Brasil nós estamos literalmente correndo atrás de oportunidades para trabalhar com nossa tecnologia preferida, lá fora a situação é exatamente o contrário. Só neste último mês, eu recebi quatro propostas de trabalho de empresas nos EUA e Suécia. Mas infelizmente nenhuma destas propostas era segura o suficiente ou se enquadrava no meu perfil.Eu me lembro bem do dia que li <a href="http://www.akitaonrails.com/2007/5/17/novidade-akita-na-surgeworks">este post</a> no blog do Akita. Poxa vida, a vez do Akita chegou, claro que não foi sorte, ele fez por merecer. Escreveu um livro, mantém um blog excelente, é bem visto por toda a comunidade Rails aqui no Brasil e mesmo depois de ter feito tudo isto e ter sido recompensado com o emprego que desejava, ele ainda está organizando um evento de Rails em São Paulo. Em outras palavras: ainda não acabou. O cara é realmente um <strong>Ninja Rails</strong>, como disse <a href="http://blog.youngbloods.org/">Carl Youngblood</a> em um dos comentários.</p>

<p>Pois bem, eu AINDA não escrevi um livro, mas criei um site de empregos para profissionais de TI totalmente escrito em RoR como uma prova de conceito para mim mesmo sobre a tecnologia. E estou mantendo um blog sobre Rails há exato nove meses, sem interrupções. E agora chegou a minha vez também.</p>

<p>Alguns de vocês já estão sabendo, outros ainda não, mas desde de segunda-feira eu sou o mais novo contratado da <a href="http://www.surgeworks.com/">Surgeworks</a>!</p>

<p>Eu não gosto de ficar repetindo o que já foi dito, por isto quem não conhece a empresa ainda, leia o <a href="http://www.akitaonrails.com/2007/5/17/novidade-akita-na-surgeworks">post do Akita</a> que eu mencionei acima. O que posso acrescentar é que a Surgeworks é uma consultoria séria, que trabalha com outsourcing e que meus colegas de trabalho se encontram espalhados pelo mundo, alguns na Itália, outros nos EUA, mais um pouco na Índia e alguns aqui no Brasil.</p>

<p>E o principal, vou trabalhar exclusivamente com Rails.</p>

<p>Minha vez chegou, mas uma coisa eu posso garantir, eu ainda não parei por aqui!<p><a rel="bookmark" href="http://nomedojogo.com/2007/10/19/carlos-brando-e-a-surgeworks/"></a></p></p>
]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Adeus Windows]]></title>
<link href="http://nomedojogo.com/2007/10/01/adeus-windows/"/>
<updated>2007-10-01T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2007/10/01/adeus-windows</id>

      <content type="html"><![CDATA[<p>Sempre fui um "cliente" do Bill Gates. Comecei minha carreira profissional com o <strong>Visual Basic 4</strong> e meu primeiro contato com um computador foi usando o <strong>DOS</strong>. Depois fui pulando de versão para versão do <strong>Windows</strong>, até o dia que descobri o Rails.</p>

<p>Antes disto eu já admirava a Apple, mas nunca me passou pela cabeça comprar um <strong>mac</strong>, talvez pelo preço, que é mais salgado que o de um <strong>PC</strong> comum. Comecei a reparar que muita gente da comunidade Rails usava mac e defendia o uso. Isto me deixou um pouco curioso, e confesso, com uma tremenda vontade de fazer parte deste time. Mas o preço ainda continuava sendo um empecilho.</p>

<p>Mas por um motivo de força maior (espero eu que tudo dê certo) fui obrigado a sair do Windows e tinha duas opções: virar cliente do titio Jobs ou ir para o <strong>Linux</strong>.</p>

<p>Agora vou correr atrás do meu bendito <strong>MacBook</strong>, mas mesmo antes dele chegar tomei uma decisão, preciso sair do Windows de vez. Tio Bill, muito obrigado por todos estes anos de convivência, mas preciso sair de casa e respirar novos ares. Para cumprir com minha decisão retirei definitivamente o Windows do meu notebook e instalei o <strong>Ubuntu</strong>, por recomendação de alguns amigos.</p>

<p>Já tinha brincado com o Linux antes, mas na época não gostei. Depois, me aventurei pelo Unix na faculdade e aprendi alguns comandos básicos o que com certeza será muito útil agora.</p>

<p>Agora, o que me deixou mais impressionado é como eu pude ser tão cego por tanto tempo? O <strong>Ubuntu</strong> é simplesmente perfeito. A instalação foi tão simples quanto uma instalação do Windows. E quero deixar claro que não tenho quase nenhuma experiência com o pinguim.</p>

<p>É impressionante a facilidade com que tudo aconteceu! Peguei o domingo para instalar o Ubuntu e já tinha planejado passar o dia todo configurando o sistema, pesquisando na internet e enchendo a paciência de amigos para tirar dúvidas. Logo depois da instalação, a primeira dúvida: como configurar a minha conexão com a internet? Oba, tem um ícone de ajuda no painel superior... opa... a primeira opção é exatamente o que eu estava procurando. Em menos de 5 minutos e lá estava eu com acesso a internet.</p>

<p>Quem nunca usou o Linux, talvez não acredite, mas em menos de 3 horas eu estava com meu sistema inteiro configurado, com o <strong>Rails</strong> e o <strong>MySQL</strong> instalado e funcionando, e gravando um DVD. Em outras palavras eu já não estava mais configurando nada, já estava usando meu sistema como se nada tivesse acontecido. E tudo isso sem torrar a paciência de ninguém.</p>

<p>Ainda tenho muita coisa à aprender, mas pelo visto será muito mais fácil do que imaginei. A única coisa que não consegui fazer foi colocar o <strong>Beryl</strong> para rodar, quando eu o executo meu monitor vira uma tela em branco. Minha placa de vídeo é <strong>ATI</strong>, tem gente falando que funciona, mas nem os tutoriais da internet me ajudaram. Se alguém tiver alguma dica... rs<p><a rel="bookmark" href="http://nomedojogo.com/2007/10/01/adeus-windows/"></a></p></p>
]]></content>
    </entry>
  
</feed>

