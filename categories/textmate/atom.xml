<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Categoria: textmate | Nome do Jogo]]></title>
  <link href="http://nomedojogo.com/categories/textmate/atom.xml" rel="self"/>
  <link href="http://nomedojogo.com/"/>
  <updated>2012-04-06T12:14:37-03:00</updated>
  <id>http://nomedojogo.com/</id>
  <author>
    <name><![CDATA[Carlos Brando]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[TextMate: Autocomplete Routes]]></title>
<link href="http://nomedojogo.com/2010/05/28/textmate-autocomplete-routes/"/>
<updated>2010-05-28T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2010/05/28/textmate-autocomplete-routes</id>

      <content type="html"><![CDATA[<object width="560" height="340"><param name="movie" value="http://www.youtube.com/v/-JBNLxjJ-xc&hl=pt_BR&fs=1&rel=0"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/-JBNLxjJ-xc&hl=pt_BR&fs=1&rel=0" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="560" height="340"></embed></object>


<p><a href="http://github.com/carlosbrando/ruby-on-rails-tmbundle">http://github.com/carlosbrando/ruby-on-rails-tmbundle</a></p>

<p><a rel="bookmark" href="http://nomedojogo.com/2010/05/28/textmate-autocomplete-routes/"></a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[A pseudo-intellisense for Textmate]]></title>
<link href="http://nomedojogo.com/2010/05/17/a-pseudo-intellisense-for-textmate/"/>
<updated>2010-05-17T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2010/05/17/a-pseudo-intellisense-for-textmate</id>

      <content type="html"><![CDATA[<p>Getting lost with all available attributes names on an Active Record object is normal, especially on large projects.</p>

<p>A lot of programmers have developed the bad habit of consulting the migrations to identify which attributes are available on an Active Record model. This certainly is not the smartest way to do this.</p>

<p>I had been using a gem called <a href="http://rubygems.org/gems/annotate">annotate</a> to automatically add comments in my models with the database schema. But that wasn't automatic enough.</p>

<p>So I decided to create something more practical and I ended up implementing a pseudo-intelissense for Textmate which can display a list with all available attributes for each Active Record model in my project. See how it works:</p>

<object width="480" height="385"><param name="movie" value="http://www.youtube.com/v/8YvXzRuG-0s&hl=pt_BR&fs=1&rel=0"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/8YvXzRuG-0s&hl=pt_BR&fs=1&rel=0" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="480" height="385"></embed></object>


<p>The idea is pretty simple. The variable name is important here. Since you can't get the project scope through TextMate (if anyone has an idea how to do it please let me know), then the variable name is what indicates which Active Record model should be used.</p>

<p>For example, if you have a model named <code>User</code> you should use variable names as <code>user</code>, <code>@user</code>, <code>@@user</code>, etc.. Variables such as <code>product</code> and <code>@products</code> will show the <code>Product</code> model attributes. The concept is simple. If you use a different variable name, you must indicate which model should be used.</p>

<p>This is still an experimental feature and a work in progress. See some of the latest features that I've been working in recent days:</p>

<p>[nggallery id=1]</p>

<p>You can install running the following commands in the terminal window:</p>

<pre class="textmate-source"><span class="source source_shell">mkdir -p <span class="keyword keyword_operator keyword_operator_tilde keyword_operator_tilde_shell">~</span>/Library/Application<span class="constant constant_character constant_character_escape constant_character_escape_shell">\ </span>Support/TextMate/Bundles

<span class="support support_function support_function_builtin support_function_builtin_shell">cd</span> <span class="keyword keyword_operator keyword_operator_tilde keyword_operator_tilde_shell">~</span>/Library/Application<span class="constant constant_character constant_character_escape constant_character_escape_shell">\ </span>Support/TextMate/Bundles

git clone git://github.com/carlosbrando/ruby-on-rails-tmbundle.git <span class="string string_quoted string_quoted_double string_quoted_double_shell"><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_shell">"</span>Ruby on Rails.tmbundle<span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_shell">"</span></span>

osascript -e <span class="string string_quoted string_quoted_single string_quoted_single_shell"><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_shell">'</span>tell app "TextMate" to reload bundles<span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_shell">'</span></span></span></pre>


<p>This bundle is a fork of Dr. Nic's <a href="http://github.com/drnic/ruby-on-rails-tmbundle">ruby-on-rails-tmbundle</a>. So if you already have installed this bundle, it's advisable to remove it before to avoid conflicts.</p>

<p>The project is on GitHub: <a href="http://github.com/carlosbrando/ruby-on-rails-tmbundle">http://github.com/carlosbrando/ruby-on-rails-tmbundle</a></p>

<p>Enjoy!</p>

<p><a rel="bookmark" href="http://nomedojogo.com/2010/05/17/a-pseudo-intellisense-for-textmate/"></a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Um pseudo-intellisense para o Textmate]]></title>
<link href="http://nomedojogo.com/2010/05/06/um-pseudo-intellisense-para-o-textmate/"/>
<updated>2010-05-06T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2010/05/06/um-pseudo-intellisense-para-o-textmate</id>

      <content type="html"><![CDATA[<p>Quem nunca se confundiu com o nome dos atributos em modelos do Active Record? Principalmente em projetos maiores é comum se perder com os nomes das colunas que cada tabela do projeto possui.</p>

<p>Alguns programadores acabam criando o péssimo hábito de consultar os arquivos de migrations para identificar quais atributos estão disponiveis através do banco de dados em uma classe do Active Record. Além de não ser nada pragmático, essa com certeza não é a forma mais inteligente de se fazer isso.</p>

<p>Até então eu costumava usar uma gem chamada <a href="http://rubygems.org/gems/annotate">annotate</a> para adicionar de forma automática comentários em meus modelos com os nomes dessas colunas. Isso já simplificava bastante.</p>

<p>Resolvi então avançar um pouco mais e implementar um pseudo-intelissense no Textmate que pudesse exibir em uma lista quais atributos estão disponíveis em cada modelo do Active Record em meu projeto. Veja como ficou:</p>

<center>
<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="480" height="385" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="allowFullScreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="src" value="http://www.youtube.com/v/8YvXzRuG-0s&amp;hl=pt_BR&amp;fs=1&amp;rel=0" /><param name="allowfullscreen" value="true" /><embed type="application/x-shockwave-flash" width="480" height="385" src="http://www.youtube.com/v/8YvXzRuG-0s&amp;hl=pt_BR&amp;fs=1&amp;rel=0" allowscriptaccess="always" allowfullscreen="true"></embed></object>
</center>


<p>A ideia é bem simples. O nome da variável é importante aqui. Como não é possível recuperar o escopo do projeto através do TextMate (se alguém tiver uma ideia de como fazer isso fale comigo), então o nome da variável informa qual é o modelo do Active Record correspondente.</p>

<p>Por exemplo: Se a variável se chamar <code>user</code>, <code>@user</code>, <code>@@user</code> ou qualquer coisa parecida então o bundle procurará pela classe com o mesmo nome, no caso <code>User</code>. O mesmo vale para um modelo chamado <code>Product</code>, onde você deverá usar variáveis com nomes como <code>product</code>, <code>@product</code> e assim por diante.</p>

<p>Esse recurso ainda é experimental. Ainda há muita coisa a ser feita, como melhorar o sistema de cache e resolver algumas incompatibilidades com gemsets do RVM e diferentes versões do Rails.</p>

<p>Para instalar, faça o download do bundle (<a href="http://github.com/downloads/carlosbrando/ruby-on-rails-tmbundle/Ruby%20on%20Rails.tmbundle.1.0.0.zip">clique aqui</a>) e carregue-o clicando duas vezes.</p>

<p>Você também pode instalar diretamente pelo terminal, executando os comandos abaixo:</p>

<pre class="textmate-source"><span class="source source_shell">mkdir -p <span class="keyword keyword_operator keyword_operator_tilde keyword_operator_tilde_shell">~</span>/Library/Application<span class="constant constant_character constant_character_escape constant_character_escape_shell">\ </span>Support/TextMate/Bundles

<span class="support support_function support_function_builtin support_function_builtin_shell">cd</span> <span class="keyword keyword_operator keyword_operator_tilde keyword_operator_tilde_shell">~</span>/Library/Application<span class="constant constant_character constant_character_escape constant_character_escape_shell">\ </span>Support/TextMate/Bundles

git clone git://github.com/carlosbrando/ruby-on-rails-tmbundle.git <span class="string string_quoted string_quoted_double string_quoted_double_shell"><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_shell">"</span>Ruby on Rails.tmbundle<span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_shell">"</span></span>

osascript -e <span class="string string_quoted string_quoted_single string_quoted_single_shell"><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_shell">'</span>tell app "TextMate" to reload bundles<span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_shell">'</span></span></span></pre>


<p>Esse bundle é um fork do repositório do Dr. Nic, no qual eu também sou commiter. Se você já tem o bundle do drnic instalado, é melhor remove-lo antes de instalar esse novo para evitar conflitos.</p>

<p>O projeto se encontra no Github: <a href="http://github.com/carlosbrando/ruby-on-rails-tmbundle">http://github.com/carlosbrando/ruby-on-rails-tmbundle</a></p>

<p>Boa diversão!</p>

<p><a rel="bookmark" href="http://nomedojogo.com/2010/05/06/um-pseudo-intellisense-para-o-textmate/"></a></p>

]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Acelerando um pouco as buscas no Textmate]]></title>
<link href="http://nomedojogo.com/2010/04/17/acelerando-um-pouco-as-buscas-no-textmate/"/>
<updated>2010-04-17T00:00:00-03:00</updated>
<id>http://nomedojogo.com/2010/04/17/acelerando-um-pouco-as-buscas-no-textmate</id>

      <content type="html"><![CDATA[<p>Eu costumo trabalhar muito com o terminal, assim é natural usar o comando <code>mate .</code> para carregar um projeto Rails no meu Textmate.</p>

<p>Em projetos grandes é normal utilizar o sistema de buscas da ferramenta para localizar um arquivo ou encontrar alguma declaração, por exemplo. Embora existam plugin como o excelente <a href="http://github.com/protocool/AckMate">AckMate</a> que melhorem perceptivelmente a performance dessas buscas, elas ainda costumam ser lentas. Um dos vilões nessa história são os arquivos temporários e logs que são inclusos no processo de busca, e normalmente esses arquivos costumam ser bem grandes. Além de deixarem a busca mais lenta, eles também acabam poluindo o resultado já que na maioria das vezes não estamos procurando por algo nos logs.</p>

<p><img class="center" src="http://old.nomedojogo.com/wp-content/uploads/2010/04/Screen-shot-2010-04-17-at-3.27.28-PM.png"></p>

<p>Inicialmente eu costumava remover os diretórios <code>tmp</code> e <code>log</code> depois de carregar o projeto no Textmate. Porém realizar essa operação todas as vezes não era nada prático.</p>

<p>A solução mais simples e definitiva é alterar as configurações do Textmate para que ele ignore esses diretórios. Para isso abra as preferencias do editor de textos (<code>⌘,</code>) e na opção <strong>Advanced</strong> vá até a aba <strong>Folder References</strong>.</p>

<p><img class="center" src="http://old.nomedojogo.com/wp-content/uploads/2010/04/Screen-shot-2010-04-17-at-11.16.19-PM.png"></p>

<p>Os dois campos acima são expressões regulares que determinam quais arquivos e diretórios devem ser carregados em um projeto. Isso é útil para impedir que o diretório do CVS apareça no Textmate, por exemplo.</p>

<p>Para adicionar os diretórios log e tmp nessa lista negra precisamos alterar o campo <strong>Folder Pattern</strong>. Adicione <code>|tmp|log</code> exatamente antes do <code>|CVS</code>. Pronto, de agora em diante toda vez que um projeto for carregado à partir de um diretório, essas pastas também serão ignoradas.</p>

<p>Além disso você também pode adicionar outros diretórios ou arquivos, como por exemplo a pasta <code>vendor</code> se você não pretende alterar ou visualizar o código de plugins e gems.</p>

<p><a rel="bookmark" href="http://nomedojogo.com/2010/04/17/acelerando-um-pouco-as-buscas-no-textmate/"></a></p>

]]></content>
    </entry>
  
</feed>

